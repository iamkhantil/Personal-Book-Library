<template>
  <view class="user-cash text-center">
    <image src="http://images.ufutx.com/201809/06/249c9f611f8529afabf9605167994a0a.png" class="icon" mode="aspectFit"></image>
    <view class="font_28">
      押金余额
      <image src="../../images/hint.png"  mode="aspectFit" style="width: 48rpx;height: 48rpx;margin-bottom: -10rpx;" @tap="showMessage"></image>
    </view>
    <view class="bold">{{money}}元</view>
    <!--<view class="font_26 record">充值记录</view>-->
    <view class="page__bd page__bd_spacing text-center" plain="true" >
      <!--<button  class="weui-btn btn-blue_l font_32"   @tap="pay" >充值</button>-->

      <button  class="weui-btn btn-blue_l font_32"   @tap="pay" wx:if="{{!cashPledge}}">充值</button>
      <button  class="weui-btn btn-blue_l font_32 returned"  wx:else  @tap="returned">退回押金</button>
    </view>
  </view>
  <!--弹框-->
  <modal class="modal" hidden="{{popUpModel}}" title="充值金额"  confirm-text="确认支付" bindcancel="listenerCancel" @confirm="pay">
    <!--<view style="padding: 12rpx 32rpx;border-bottom: 1rpx solid #d3d3d3;">-->
      <!--<span class="bold">订单详情：</span>-->
      <!--<span class="flo_r">替他人支付<span class="orange bold">{{infor.name}}</span></span>-->
      <!--<view class="clearfloat"></view>-->
    <!--</view>-->
    <input placeholder="请输入充值金额(元)"  bindinput="getMoney" class="text-center" type="digit"/>
  </modal>
</template>

<script>
  import wepy from 'wepy'
  import {service} from '../../config.js'
  import base from '../../mixins/base'
  import http from '../../mixins/http'
  import ShareMessage from '../../mixins/ShareMessage'

  export default class cash extends wepy.page {
    mixins = [base, http, ShareMessage]
    config = {
      navigationBarTitleText: '我的押金',
      enablePullDownRefresh: false
    }
    components = {}
    data = {
      popUpModel: true, // 弹框
      money: '0.00', // 充值金额
      trade_no: '', // 订单号将
      cashPledge: '' // 判断是否充值

    }

    onShow() {
      // 初始化页面数据
      this.initPageData()
    }

    onPullDownRefresh() {
      this.initPageData()
    }

    // 初始化页面数据
    initPageData() {
      this.$get({url: service.cash}, {
        success: ({code, data}) => {
          this.cashPledge = Number(data.cash_pledge)
          if (this.cashPledge) {
            this.money = '99.00'
          } else {
            this.money = '0.00'
          }
          this.$apply()
        },
        fail: () => {
        },
        complete: () => {
        }
      })
    }

    methods = {
      toIndex() {
//        wx.switchTab({url: '/pages/index'})
      },
      // 显示信息
      showMessage() {
        wx.showModal({
          title: '押金说明',
          content: `部分图书馆需要押金才可借阅，押金只是为了保障图书不被损坏！可退！`,
          showCancel: false,
          success: function (res) {
            if (res.confirm) {
              console.log('用户点击确定')
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
      },
      // 取消充值
      listenerCancel() {
        this.popUpModel = true
      },
      // 充值弹框
      popUp() {
        this.popUpModel = false
      },
      // input绑定money
      getMoney(e) {
        this.money = e.detail.value
        console.log(this.money)
      },
      // 退押金
      returned() {
        let fn = () => {
          this.$post({url: service.refund}, {
            success: ({code, data}) => {
              let tradeNo = data.refund_trade_no
              this.$get({url: `${service.refundMark}/${tradeNo}`}, {
                success: ({code, data}) => {
                  this.initPageData()
                  wx.showModal({
                    title: '提示',
                    content: `押金退回成功！请注意查收`,
                    showCancel: false,
                    success: function (res) {
                      if (res.confirm) {
                        console.log('用户点击确定')
                      } else if (res.cancel) {
                        console.log('用户点击取消')
                      }
                    }
                  })
                }
              })
            },
            fail: () => {
            },
            complete: () => {
            }
          })
        }
        wx.showModal({
          title: '提示',
          content: '退回押金后将无法向部分图书馆借书哦！你确定要这么做吗？',
          success: function (res) {
            if (res.confirm) {
              fn()
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
//        try {
//          wx.showModal({
//            title: '提示',
//            content: `充值成功！是否返回上次预览的页面`,
//            success: function (res) {
//              if (res.confirm) {
//                if (wx.getStorageSync('page')) {
//                  wx.navigateBack({
//                    delta: 1
//                  })
//                }
//                let url = wx.getStorageSync('page')
//                wx.redirectTo({url: url})
//              } else if (res.cancel) {
//                console.log('用户点击取消')
//              }
//            }
//          })
//        } catch (err) {
//          wx.showModal({
//            title: '提示',
//            content: `你有未归还的图书，请先归还图书后再申请！`,
//            showCancel: false,
//            success: function (res) {
//              if (res.confirm) {
//                console.log('用户点击确定')
//              } else if (res.cancel) {
//                console.log('用户点击取消')
//              }
//            }
//          })
//        }
      },
      // 微信支付
      pay() {
        let that = this,
          mark = () => {
            that.$post({url: service.mark + `/${that.trade_no}`}, {
              success: ({code, data}) => {
                wx.showToast({
                  title: '支付成功',
                  duration: 2000
                })
                that.initPageData()
              },
              fail: ({code, data}) => {
              },
              complete: () => {
              }
            })
          },
          wxPay = (wxconfig, fn) => {
//            wx.config(JSON.parse(response.data.data.order.wx_pay.js));
            wx.requestPayment({
              timeStamp: wxconfig.timestamp, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符
              nonceStr: wxconfig.nonceStr, // 支付签名随机串，不长于 32 位
              package: wxconfig.package, // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）
              signType: wxconfig.signType, // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
              paySign: wxconfig.paySign, // 支付签名
              success: function (res) {
                that.$post({url: service.mark + `/${that.trade_no}`}, {
                  success: ({code, data}) => {
                    wx.showToast({
                      title: '支付成功',
                      duration: 2000
                    })
                    that.initPageData()
                  },
                  fail: ({code, data}) => {
                  },
                  complete: () => {
                  }
                })
              },
              fail: function (res) {
                wx.showToast({
                  title: '已取消支付',
                  icon: 'none',
                  duration: 2000
                })
              }
            })
          }
        that.$showLoading('支付中...')
        this.$post({url: service.recharge}, {
          success: ({code, data}) => {
            that.trade_no = data.trade_no
            that.$apply()
            let wxconfig = data.wx_pay.config,
              {paymentDebug} = wxconfig
            if (paymentDebug) {
              mark()
            } else {
              wxPay(wxconfig)
            }
          },
          fail: ({code, data}) => {
          },
          complete: () => {
            wx.hideLoading()
          }
        })
      }
    }
  }
</script>

<style lang="less">
@import "../../styles/custom/fn.less";

.user-cash{
  .icon{
    width: 120rpx;
    height: 130rpx;
    margin-top: 26%;
  }
  button{
    width: 62%;margin-top: 6%;
  }
  .record{
    text-align: right;
    margin-right: 3%;
  }
  .returned{
    background: #ededed;
    /*line-height: 68rpx;*/
    color: #b9b9b9;
    border-radius: 6rpx;
  }
}
  .modal{
    input{
      margin: 22rpx;
      border-bottom: 1rpx solid #dedede;
    }
  }
</style>
