<template>
  <view>
    <view class="weui-search-bar" style="position: fixed;width: 100%;background-color: #005b9e;border-top: none">
      <view class="weui-search-bar__form">
        <view class="weui-search-bar__box">
          <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
          <input type="text" class="weui-search-bar__input" placeholder="搜索" value="{{inputVal}}" focus="{{inputShowed}}" @confirm="inputTyping" />
          <view class="weui-icon-clear" wx:if="{{inputVal.length > 0}}" bindtap="clearInput">
            <icon type="clear" size="14"></icon>
          </view>
        </view>
        <label class="weui-search-bar__label" hidden="{{inputShowed}}" bindtap="showInput">
          <icon class="weui-icon-search" type="search" size="14"></icon>
          <view class="weui-search-bar__text">搜索</view>
        </label>
      </view>
      <view class="weui-search-bar__cancel-btn" hidden="{{!inputShowed}}" bindtap="hideInput">取消</view>
    </view>
    <view style="width: 100%;height: 80rpx"></view>
    <view class="weui-cells__title"></view>
    <view class="scrollBox text-center" wx:if="{{showBackTopBtn}}"  catchtap="BackTop">
      <image src='../../images/Stick.png'  mode="aspectFit"  style="width: 40rpx;height: 40rpx;margin-top: 8rpx;"></image>
      <view style="margin-top: -22rpx;font-size: 24rpx;">置顶</view>
    </view>
    <view class="page__bd">
      <BookList :list.sync="list" :loading.sync="loading" :noMore.sync="noMoreList" :libraryId.sync='libraryId' :isAdmin.sync='isAdmin'></BookList>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { service } from '../../config.js'
  import base from '../../mixins/base'
  import http from '../../mixins/http'
  import SearchBar from '../../components/searchbar'
  import BookList from '../../components/bookList'
  import ShareMessage from '../../mixins/ShareMessage'
//   查找全部或图书
  export default class mainList extends wepy.page {
    mixins = [base, http, ShareMessage]
    config = {
      navigationBarTitleText: '查找图书'
    }
    data = {
      params: {},
      libraryId: 0,
      noMoreList: false,
      loading: false,
      list: [],
      page: 1,
      keyword: '',
      isAdmin: 0,
      inputShowed: false,
      inputVal: '',
      showBackTopBtn: false, // 显示置顶
      is_recommend: 0
    }
    onShareAppMessage(res) {
      return this.$parent.onShareAppMessage(this.config.navigationBarTitleText)
    }
    onPageScroll(res) {
      let top = res.scrollTop,
        show = top > 380 ? true : false
      this.showBackTopBtn = show
      this.$apply()
      console.log(top)
    }
    onShow() {
      // google analytics
      this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
    }
    onLoad(query) {
      let params = query && query.params
      try {
        params = JSON.parse(params)
      } catch (e) {
        params = {}
      }
      if (query.is_recommend) {
        this.is_recommend = query.is_recommend
        wx.setNavigationBarTitle({
          title: '推荐图书'
        })
      }
//      if (!params == 'object') {
//        this.keyword = params
//      } else {
//        this.keyword = ''
//      }
      this.params = params
      let libraryid = this.getNumber(query.library_id)
      this.libraryId = this.isNumber(libraryid) ? libraryid : 0
      if (query.member_type) {
        this.isAdmin = query.member_type == 'ADMIN' ? 1 : 0
      }
      this.$apply()
//      debugger
    }
    onReady() {
      this.initPageData(this.page)
    }

    onPullDownRefresh() {
      this.initPageData()
    }

    onReachBottom() {
      setTimeout(() => {
        this.updateBookList(this.page)
        this.$apply()
      }, 200)
    }

    methods = {
      BackTop() {
        this.showBackTopBtn = false
        wx.pageScrollTo({
          scrollTop: 0,
          duration: 400
        })
      },
      showInput () {
        this.inputShowed = true
      },
      hideInput () {
        this.inputVal = ''
        this.inputShowed = false
      },
      clearInput () {
        this.inputVal = ''
      },
      inputTyping (e) {
        this.keyword = e.detail.value
        this.page = 1
        this.initPageData()
      },
      clearSearch() {
        // 清空参数
        this.params = {}
        // 初始化页面
        this.initPageData()
      }
    }

    computed = {
      keywords() {
        const title = this.params && this.params.title
        const words = this.params && this.params.keyword
        const keywords = this.getString(words || title).split(/\s+/g)
        return keywords.filter((item) => item) || []
      }
    }

    // 初始化页面数据
    initPageData(keyword) {
      // 初始化参数
      this.page = 1
      this.loading = false
      this.noMoreList = false
      this.list = []

      // 请求推荐列表
      this.updateBookList(this.page)
    }

    // 更新图书列表
    updateBookList(page) {
      if (this.loading || this.noMoreList) return
      this.loading = true
      // 推荐列表
      let url = `${service.libraries}/${this.libraryId}/books/v2?library_id=${this.libraryId}&keyword=${this.keyword}&is_recommend=${this.is_recommend}`
      if (this.libraryId == 0) {
        url = `${service.books}/v2?keyword=${this.keyword}`
      }
      this.$get({
        url: url,
        data: Object.assign({}, this.getObject(this.params), {
          // 默认从1开始为第一页
          page: page
        })
      }, {
        success: ({code, data}) => {
          this.size = data.per_page
          this.noMoreList = false
          if (data.current_page > data.last_page) {
            this.noMoreList = true
            return
          }

          data = data.data
          // 请求到空列表后就认为没有更多了
          if (this.isArray(data) && data.length === 0) {
            this.noMoreList = true
            return
          }
          if (this.list.length === 0) {
            this.list = this.getBooks(data)
          } else {
            // 添加到列表中
            this.list = [
              ...this.list,
              ...this.getBooks(data)
            ]
          }
          // 成功了就增加一页
          this.page += 1
          console.log(this.list)
        },
        fail: ({code, data}) => {
          console.log('[updateBookList fail]', code, data)
        },
        complete: () => {
          this.loading = false
        }
      })
    }

    // 处理图书列表
    getBooks(data) {
      return this.getArray(data).map((book, index) => {
        // 拼接示例数据
        return {
          id: book.id,
          title: book.title ? book.title : '无标题',
          content: `简介: ${book.summary}.`,
          image: book.image ? book.image : 'http://images.ufutx.com/201709/27/97bae3e1de000df7b4b6b28a3195a4de.png',
          tags: [book.author ? book.author : '无'],
          publisher: book.publisher,
          switchActive: book.is_recommend == '1' ? 'true' : 'false',
          name: book.name,
          // 暂时开发所有人都能修改，后续需要判断是否为书籍拥有人
          isOwner: '1',
          book_id: book.id,
          user_id: book.user_id,
          library_id: book.library_id ? book.library_id : 0,
          type: book.type
        }
      })
    }

    components = {
      BookList,
      SearchBar
    }
  }
</script>

<style lang="less">
@import "../../styles/weui/base/fn.wxss";

.main-list{
  .width-8p{
    width: 80% !important;
  }
  .main-list-title {
    padding: 1em @weuiCellGapH;
    color: @weuiTextColorGray;
    font-size: @weuiCellTipsFontSize;
  }
}
.page__bd {
  height:100%;
}
.scrollBox{
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
  background: white;
  border: 4rpx solid #eeeeee;
  box-shadow: 1rpx 1rpx 18rpx #cbcbcb;
  position: fixed;
  bottom: 12%;
  right: 8%;
  z-index: 9999;
}
</style>
